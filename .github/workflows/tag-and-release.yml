name: Tag version and create release

on:
  push:
    branches: [ master ]

jobs:
  tag-version:
    name: Tag Version
    runs-on: ubuntu-latest
    outputs:
      newTag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push ${{ steps.tag_version.outputs.new_tag }} tag
        run: |
          git tag ${{ steps.tag_version.outputs.new_tag }}
          git push origin ${{ steps.tag_version.outputs.new_tag }}

  create-release:
    name: Create Release
    needs: tag-version
    if: startsWith(needs.tag-version.outputs.newTag, 'v')
    runs-on: ubuntu-latest

    steps:
      - run: echo "Generating release with the ${{needs.tag-version.outputs.newTag}} tag"

      - uses: actions/checkout@v2
        with:
          ref: ${{needs.tag-version.outputs.newTag}}
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache files
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build
        env:
          NEW_TAG: ${{needs.tag-version.outputs.newTag}}
        run: mvn clean package -Drevision=${NEW_TAG:1} -DskipTests

      - name: Set JAR_FILE
        id: variables
        run: |
          echo "::set-output name=JAR_FILE::$(ls -R | grep -i "**.jar$")"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.tag-version.outputs.newTag}}
          release_name: Release ${{needs.tag-version.outputs.newTag}}
          draft: false
          prerelease: false

      - name: Upload ${{steps.variables.outputs.JAR_FILE}} to Release ${{needs.tag-version.outputs.newTag}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{steps.variables.outputs.JAR_FILE}}
          asset_name: ${{steps.variables.outputs.JAR_FILE}}
          asset_content_type: application/java-archive

