# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Bump version and create release

on:
  push:
    branches: [ master ]

jobs:
  tag-version:
     runs-on: ubuntu-latest
     outputs:
      newTag: ${{ steps.tag_version.outputs.new_tag }}

     steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set pom
        env:
          NEW_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: mvn versions:set -DnewVersion=${NEW_TAG:1}
      
      - name: Commit files
        run: |
          git config --local user.email "s.celikce@gmail.com"
          git config --local user.name "Semih Ã‡elik"
          git add ./pom.xml
          git commit -m "[ci] bump version ${{ steps.tag_version.outputs.new_tag }}"
          git push

  create-release:
    name: Create Release
    needs: tag-version
    if: startsWith(needs.tag-version.outputs.newTag, 'v')
    runs-on: ubuntu-latest

    steps:
      - name: Get tag from previous job
        run: echo "Generating release with the ${{needs.tag-version.outputs.newTag}} tag"

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build
        run: mvn clean install
      
      - name: Create jar
        run: zip --junk-paths jar_file ./target/*.jar

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.tag-version.outputs.newTag}}
          release_name: Release ${{needs.tag-version.outputs.newTag}}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jar_file.zip
          asset_name: jar_file.zip
          asset_content_type: application/zip
